# Generated by Django 5.2 on 2025-04-24 09:58

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('payment_type', models.CharField(choices=[('CARD', 'Credit/Debit Card'), ('MOBILE', 'Mobile Payment'), ('BANK', 'Bank Transfer'), ('CASH', 'Cash on Delivery')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('icon_class', models.CharField(help_text='Font Awesome icon class', max_length=50)),
                ('additional_info', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('CLOTHING', 'Traditional Clothing'), ('FASHION', 'Modern Clothing'), ('FOOTWEAR', 'Footwear'), ('BAGS', 'Bags & Purses'), ('JEWELRY', 'Jewelry'), ('ACCESSORIES', 'Fashion Accessories'), ('WATCHES', 'Watches'), ('BEAUTY', 'Beauty Products'), ('SKINCARE', 'Skincare'), ('HAIRCARE', 'Haircare'), ('FRAGRANCE', 'Fragrances & Perfumes'), ('PERSONAL_CARE', 'Personal Care'), ('PHONES', 'Mobile Phones'), ('LAPTOPS', 'Laptops'), ('COMPUTERS', 'Desktops & PCs'), ('TVS', 'Televisions'), ('AUDIO', 'Audio Equipment'), ('GAMING', 'Gaming Consoles & Accessories'), ('CAMERAS', 'Cameras & Photography'), ('FURNITURE', 'Furniture'), ('HOME_DECOR', 'Home Decor'), ('KITCHEN', 'Kitchenware'), ('BEDDING', 'Bedding & Linens'), ('LIGHTING', 'Lighting'), ('TOOLS', 'Home Tools & Hardware'), ('COFFEE', 'Ethiopian Coffee'), ('TEA', 'Tea'), ('SPICES', 'Spices & Herbs'), ('PACKAGED_FOODS', 'Packaged Foods'), ('SNACKS', 'Snacks & Beverages'), ('GOURMET', 'Gourmet Foods'), ('HANDICRAFT', 'Handicrafts'), ('PAINTINGS', 'Paintings'), ('SCULPTURE', 'Sculptures'), ('ART_SUPPLIES', 'Art Supplies'), ('BOOKS', 'Books & Literature'), ('NOTEBOOKS', 'Notebooks & Journals'), ('OFFICE_SUPPLIES', 'Office Supplies'), ('TOYS', 'Toys & Games'), ('BABY_CLOTHING', 'Baby Clothing'), ('BABY_CARE', 'Baby Care'), ('KIDS_FURNITURE', 'Kids Furniture'), ('SPORTS', 'Sports Equipment'), ('FITNESS', 'Fitness & Gym'), ('CAMPING', 'Camping & Hiking'), ('BICYCLES', 'Bicycles & Accessories'), ('HEALTH', 'Health Products'), ('VITAMINS', 'Vitamins & Supplements'), ('WELLNESS', 'Wellness & Therapy'), ('CAR_ACCESSORIES', 'Car Accessories'), ('MOTORCYCLE_PARTS', 'Motorcycle Parts'), ('CAR_CARE', 'Car Care Products'), ('PHONE_ACCESSORIES', 'Phone Accessories'), ('COMPUTER_ACCESSORIES', 'Computer Accessories'), ('CHARGERS', 'Chargers & Power Banks'), ('SMART_DEVICES', 'Smart Devices'), ('MUSICAL_INSTRUMENTS', 'Musical Instruments'), ('PETS', 'Pet Supplies'), ('PLANTS', 'Indoor Plants & Gardening'), ('EVENT_SUPPLIES', 'Event & Party Supplies'), ('GIFTS', 'Gifts & Special Items'), ('RELIGIOUS_ITEMS', 'Religious & Cultural Items'), ('CLEANING', 'Cleaning Products')], max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SearchLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=255)),
                ('count', models.PositiveIntegerField(default=1)),
                ('last_searched', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-count', '-last_searched'],
            },
        ),
        migrations.CreateModel(
            name='ShippingProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('tracking_url_template', models.CharField(help_text='Use {tracking_number} as placeholder', max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('delivery_time', models.CharField(help_text='e.g., 3-5 business days', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='Zema Boutique', max_length=100)),
                ('hero_title', models.CharField(max_length=200)),
                ('hero_description', models.TextField()),
                ('hero_button_text', models.CharField(default='Shop Now', max_length=50)),
                ('hero_button_link', models.CharField(default='/products', max_length=100)),
                ('hero_image', models.ImageField(upload_to='site/')),
                ('secondary_button_text', models.CharField(default='Learn More', max_length=50)),
                ('secondary_button_link', models.CharField(default='/about', max_length=100)),
                ('facebook_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Site Configuration',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=20, unique=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('SHIPPED', 'Shipped'), ('DELIVERED', 'Delivered'), ('CANCELLED', 'Cancelled'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('shipping_address', models.JSONField()),
                ('billing_address', models.JSONField(blank=True, null=True)),
                ('customer_note', models.TextField(blank=True)),
                ('tracking_number', models.CharField(blank=True, max_length=50)),
                ('tracking_url', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('CARD', 'Credit/Debit Card'), ('PAYPAL', 'PayPal'), ('BANK', 'Bank Transfer')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('payment_details', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='store.order')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='store.order')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hero_image', models.ImageField(upload_to='collections/')),
                ('additional_image_1', models.ImageField(blank=True, null=True, upload_to='collections/')),
                ('additional_image_2', models.ImageField(blank=True, null=True, upload_to='collections/')),
                ('products', models.ManyToManyField(blank=True, related_name='collections', to='store.product')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/')),
                ('alt_text', models.CharField(blank=True, max_length=100)),
                ('is_feature', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='store.product')),
            ],
            options={
                'ordering': ['is_feature', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='SpecialOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('discount_percentage', models.PositiveIntegerField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('image', models.ImageField(upload_to='offers/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('products', models.ManyToManyField(related_name='special_offers', to='store.product')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=100)),
                ('customer_location', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')])),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='testimonials/')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.product')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='store.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
            options={
                'unique_together': {('cart', 'product')},
            },
        ),
    ]
